//Sort an Array
//METHOD 1
    vector<int> sortArray(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        return nums;
    }
    
//METHOD 2
    void Merge(vector<int>& nums,int left,int mid,int right){
        vector<int> ans;
        int i=left;
        int j=mid+1;
        while(i<=mid && j<=right){
            if(nums[i]>=nums[j]){
                ans.push_back(nums[j]);
                j++;
            }
            else{
                ans.push_back(nums[i]);
                i++;
            }
        }
        while(i<=mid){
            ans.push_back(nums[i]);
            i++;
        }
        while(j<=right){
            ans.push_back(nums[j]);
            j++;
        }
        for(int m=0;m<ans.size();m++){
            nums[left+m]=ans[m];
        }
    }
    void MergeSorted(vector<int>& nums,int left,int right){
        if(left<right){
            int mid=(left+right)/2;
            MergeSorted(nums,left,mid);
            MergeSorted(nums,mid+1,right);
            Merge(nums,left,mid,right);
        }
    }
    vector<int> sortArray(vector<int>& nums) {
        int left=0;
        int right=nums.size()-1;
        MergeSorted(nums,left,right);
        return nums; 
    }
